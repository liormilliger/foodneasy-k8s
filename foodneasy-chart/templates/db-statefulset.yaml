apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-db
  labels:
    app: {{ .Release.Name }}-db
spec:
  serviceName: {{ .Release.Name }}-db
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-db
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-db
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
        imagePullPolicy: {{ .Values.db.image.pullPolicy }}
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: {{ .Values.db.credentials.user }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-db-secret
              key: postgres-password
        - name: POSTGRES_DB
          value: {{ .Values.db.credentials.database }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: {{ .Values.db.resources.requests.memory }}
            cpu: {{ .Values.db.resources.requests.cpu }}
          limits:
            memory: {{ .Values.db.resources.limits.memory }}
            cpu: {{ .Values.db.resources.limits.cpu }}
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.db.storage.size }}